{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","renderSquare","React","Component","Game","history","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sMAIA,SAASA,EAAOC,GACZ,OACI,4BAAQC,UAAU,SACdC,QAASF,EAAME,SACdF,EAAMG,O,IAMbC,E,YACF,WAAYJ,GAAQ,IAAD,8BACf,4CAAMA,KACDK,MAAQ,CACTC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJE,E,0EAUNC,GAAI,IAAD,OACZ,OAAO,kBAACX,EAAD,CACHI,MAAOQ,KAAKX,MAAMM,QAAQI,GAC1BR,QAAS,kBAAM,EAAKF,MAAME,QAAQQ,Q,+BAKtC,OACI,6BACI,yBAAKT,UAAU,aACVU,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAEvB,yBAAKX,UAAU,aACVU,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAEvB,yBAAKX,UAAU,aACVU,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GAlCnBC,IAAMC,WAyCpBC,E,YACF,WAAYf,GAAQ,IAAD,8BACf,4CAAMA,KACDK,MAAQ,CACTW,QAAS,CAAC,CACNV,QAASC,MAAM,GAAGC,KAAK,QAE3BS,WAAW,EACXR,SAAS,GAPE,E,yEAUPC,GACR,IAAMM,EAAUL,KAAKN,MAAMW,QAAQE,MAAM,EAAGP,KAAKN,MAAMY,WAAW,GAE5DX,EADUU,EAAQA,EAAQG,OAAO,GACfb,QAAQY,QAC5BE,EAAgBd,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKU,SAAS,CACVL,QAASA,EAAQM,OAAO,CAAC,CACrBhB,QAASA,KAEbW,WAAYD,EAAQG,OACpBV,SAAUE,KAAKN,MAAMI,a,6BAItBc,GACHZ,KAAKU,SAAS,CACVJ,WAAYM,EACZd,QAAUc,EAAK,GAAI,M,+BAGjB,IAgBFC,EAhBC,OACCR,EAAUL,KAAKN,MAAMW,QACrBS,EAAUT,EAAQL,KAAKN,MAAMY,YAC7BS,EAASN,EAAgBK,EAAQnB,SAEjCqB,EAAQX,EAAQY,IAAI,SAACL,EAAKM,GAC5B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACI,wBAAIE,IAAKF,GACL,4BAAQ3B,QAAS,kBAAI,EAAK8B,OAAOH,KAAQC,MAYrD,OALIN,EADAE,EACS,WAAaA,EAEb,iBAAmBf,KAAKN,MAAMI,QAAU,IAAM,KAIvD,yBAAKR,UAAU,QACX,yBAAKA,UAAU,cACX,kBAACG,EAAD,CACIE,QAASmB,EAAQnB,QACjBJ,QAAS,SAACQ,GAAD,OAAO,EAAKuB,YAAYvB,OAIzC,yBAAKT,UAAU,aACX,6BAAMuB,GACN,4BAAKG,S,GApENd,IAAMC,WAkFzB,SAASM,EAAgBd,GAWrB,IAVA,IAAM4B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFxB,EAAI,EAAGA,EAAIwB,EAAMf,OAAQT,IAAK,CAAC,IAAD,cACjBwB,EAAMxB,GADW,GAC5ByB,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAI/B,EAAQ6B,IAAM7B,EAAQ6B,KAAO7B,EAAQ8B,IAAM9B,EAAQ6B,KAAO7B,EAAQ+B,GAClE,OAAO/B,EAAQ6B,GAGvB,OAAO,KAtBXG,IAASC,OACL,kBAACxB,EAAD,MACAyB,SAASC,eAAe,U","file":"static/js/main.42a06dac.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n    return (\n        <button className=\"square\"\n            onClick={props.onClick} >\n            {props.value}\n        </button >\n    );\n\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true,\n        };\n    }\n\n\n\n    renderSquare(i) {\n        return <Square\n            value={this.props.squares[i]}\n            onClick={() => this.props.onClick(i)}\n        />;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber:0,\n            xIsNext: true,\n        };\n    }\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber+1);\n        const current = history[history.length-1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step){\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step%2)==0,\n        });\n    }\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step,move)=>{\n            const desc = move?\n            'Go to move #' + move:\n            'Go to game start';\n            return(\n                <li key={move}>\n                    <button onClick={()=>this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        });\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}"],"sourceRoot":""}